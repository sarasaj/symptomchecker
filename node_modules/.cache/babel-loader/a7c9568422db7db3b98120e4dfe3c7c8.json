{"ast":null,"code":"var _jsxFileName = \"/Users/saraalhasan/Downloads/control_ver_medical-symptom-checker-master/src/components/Home/Home.jsx\";\nimport React, { Component } from \"react\";\nimport \"./Home.css\";\n\nfunction changeTextSize(action) {\n  const elements = document.querySelectorAll('body, body *');\n  elements.forEach(element => {\n    let currentSize = window.getComputedStyle(element).fontSize;\n    let newSize;\n\n    switch (action) {\n      case 'increase':\n        newSize = parseFloat(currentSize) * 1.2 + 'px';\n        break;\n\n      case 'decrease':\n        newSize = parseFloat(currentSize) / 1.2 + 'px';\n        break;\n\n      case 'reset':\n        newSize = '';\n        break;\n    }\n\n    element.style.fontSize = newSize;\n  });\n}\n\nconst Home = props => {\n  //   console.log(\"is checked\", props, props.isChecked, props.checked);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"Home\",\n    className: \"tablet:grid-col padding-x-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onclick: \"adjustFontSize('increase')\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, \"A+\"), /*#__PURE__*/React.createElement(\"button\", {\n    onclick: \"adjustFontSize('decrease')\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, \"A-\"), /*#__PURE__*/React.createElement(\"button\", {\n    onclick: \"adjustFontSize('reset')\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, \"Reset\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, \"Before using this symptom checker, please read carefully and accept our Terms and Services:\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, \"This checkup is not a diagnosis.\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, \"This checkup is for informational purposes and is not a qualified medical opinion.\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, \"Information that you provide is anonymous and not shared with anyone. We also do not store any information on our server.\")), /*#__PURE__*/React.createElement(\"form\", {\n    class: \"usa-form TermsCheckbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"usa-checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    checked: props.isChecked,\n    onChange: props.checked,\n    class: \"usa-checkbox__input\",\n    id: \"truth\",\n    type: \"checkbox\",\n    name: \"historical-figures-1\",\n    value: \"truth\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    class: \"usa-checkbox__label\",\n    for: \"truth\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, \"I agree to the DHILab terms and conditions\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tablet:grid-col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/saraalhasan/Downloads/control_ver_medical-symptom-checker-master/src/components/Home/Home.jsx"],"names":["React","Component","changeTextSize","action","elements","document","querySelectorAll","forEach","element","currentSize","window","getComputedStyle","fontSize","newSize","parseFloat","style","Home","props","isChecked","checked"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,YAAP;;AACA,SAASC,cAAT,CAAwBC,MAAxB,EAAgC;AAC9B,QAAMC,QAAQ,GAAGC,QAAQ,CAACC,gBAAT,CAA0B,cAA1B,CAAjB;AACAF,EAAAA,QAAQ,CAACG,OAAT,CAAiBC,OAAO,IAAI;AACxB,QAAIC,WAAW,GAAGC,MAAM,CAACC,gBAAP,CAAwBH,OAAxB,EAAiCI,QAAnD;AACA,QAAIC,OAAJ;;AACA,YAAOV,MAAP;AACI,WAAK,UAAL;AACIU,QAAAA,OAAO,GAAGC,UAAU,CAACL,WAAD,CAAV,GAA0B,GAA1B,GAAgC,IAA1C;AACA;;AACJ,WAAK,UAAL;AACII,QAAAA,OAAO,GAAGC,UAAU,CAACL,WAAD,CAAV,GAA0B,GAA1B,GAAgC,IAA1C;AACA;;AACJ,WAAK,OAAL;AACII,QAAAA,OAAO,GAAG,EAAV;AACA;AATR;;AAWAL,IAAAA,OAAO,CAACO,KAAR,CAAcH,QAAd,GAAyBC,OAAzB;AACH,GAfD;AAgBD;;AAGD,MAAMG,IAAI,GAAIC,KAAD,IAAW;AACtB;AACA,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,EAAE,EAAC,MAAR;AAAe,IAAA,SAAS,EAAC,6BAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAQ,IAAA,OAAO,EAAC,4BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADA,eAEA;AAAQ,IAAA,OAAO,EAAC,4BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFA,eAGA;AAAQ,IAAA,OAAO,EAAC,yBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHA,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mGALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0FAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iIAHF,CANF,eAWE;AAAM,IAAA,KAAK,EAAC,wBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,KAAK,EAAC,cAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAEA,KAAK,CAACC,SAAtB;AAAiC,IAAA,QAAQ,EAAED,KAAK,CAACE,OAAjD;AAA0D,IAAA,KAAK,EAAC,qBAAhE;AAAsF,IAAA,EAAE,EAAC,OAAzF;AAAiG,IAAA,IAAI,EAAC,UAAtG;AAAiH,IAAA,IAAI,EAAC,sBAAtH;AAA6I,IAAA,KAAK,EAAC,OAAnJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAO,IAAA,KAAK,EAAC,qBAAb;AAAmC,IAAA,GAAG,EAAC,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDAFF,CADF,CAXF,CADF,eAsBE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtBF,CADF;AA0BD,CA5BD;;AA8BA,eAAeH,IAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Home.css\";\nfunction changeTextSize(action) {\n  const elements = document.querySelectorAll('body, body *');\n  elements.forEach(element => {\n      let currentSize = window.getComputedStyle(element).fontSize;\n      let newSize;\n      switch(action) {\n          case 'increase':\n              newSize = parseFloat(currentSize) * 1.2 + 'px';\n              break;\n          case 'decrease':\n              newSize = parseFloat(currentSize) / 1.2 + 'px';\n              break;\n          case 'reset':\n              newSize = '';\n              break;\n      }\n      element.style.fontSize = newSize;\n  });\n}\n\n\nconst Home = (props) => {\n  //   console.log(\"is checked\", props, props.isChecked, props.checked);\n  return (\n    <React.Fragment>\n      <div id=\"Home\" className=\"tablet:grid-col padding-x-2\">\n      <button onclick=\"adjustFontSize('increase')\">A+</button>\n      <button onclick=\"adjustFontSize('decrease')\">A-</button>\n      <button onclick=\"adjustFontSize('reset')\">Reset</button>\n\n        <p>Before using this symptom checker, please read carefully and accept our Terms and Services:</p>\n        <ul>\n          <li>This checkup is not a diagnosis.</li>\n          <li>This checkup is for informational purposes and is not a qualified medical opinion.</li>\n          <li>Information that you provide is anonymous and not shared with anyone. We also do not store any information on our server.</li>\n        </ul>\n        <form class=\"usa-form TermsCheckbox\">\n          <div class=\"usa-checkbox\">\n            <input checked={props.isChecked} onChange={props.checked} class=\"usa-checkbox__input\" id=\"truth\" type=\"checkbox\" name=\"historical-figures-1\" value=\"truth\" />\n            <label class=\"usa-checkbox__label\" for=\"truth\">\n              I agree to the DHILab terms and conditions\n            </label>\n          </div>\n        </form>\n      </div>\n\n      <div className=\"tablet:grid-col\">{/* <img src=\"/images/TOS.png\" /> */}</div>\n    </React.Fragment>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}