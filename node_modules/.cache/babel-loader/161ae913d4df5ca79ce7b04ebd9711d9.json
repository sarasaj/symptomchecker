{"ast":null,"code":"import _objectSpread from\"/Users/saraalhasan/Desktop/thesis/symptom checker versions/1 perception_experiment_ver_medical-symptom-checker-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"/Users/saraalhasan/Desktop/thesis/symptom checker versions/1 perception_experiment_ver_medical-symptom-checker-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/saraalhasan/Desktop/thesis/symptom checker versions/1 perception_experiment_ver_medical-symptom-checker-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/saraalhasan/Desktop/thesis/symptom checker versions/1 perception_experiment_ver_medical-symptom-checker-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/saraalhasan/Desktop/thesis/symptom checker versions/1 perception_experiment_ver_medical-symptom-checker-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import\"./Patient.css\";var Patient2=/*#__PURE__*/function(_Component){_inherits(Patient2,_Component);var _super=_createSuper(Patient2);function Patient2(){var _this;_classCallCheck(this,Patient2);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={questions:[{text:\"Patient is overweight or obese\",answer:\"Patient doesn't know\",key:\"question_1\"},{text:\"Patient smokes cigarettes\",answer:\"Patient doesn't know\",key:\"question_2\"},{text:\"Patient has been recently injured\",answer:\"Patient doesn't know\",key:\"question_3\"},{text:\"Patient has high cholesterol\",answer:\"Patient doesn't know\",key:\"question_4\"},{text:\"Patient has hypertension\",answer:\"Patient doesn't know\",key:\"question_5\"},{text:\"Patient has diabetes\",answer:\"Patient doesn't know\",key:\"question_6\"}],next_button_available:\"Not available\"};_this.handleOnChange=function(e,questionKey){var updatedQuestions=_this.state.questions.map(function(question){if(question.key===questionKey){return _objectSpread(_objectSpread({},question),{},{answer:e.target.value});}return question;});var allAnswered=updatedQuestions.every(function(question){return question.answer!==\"\";});_this.setState({questions:updatedQuestions,next_button_available:allAnswered?\"Available\":\"Not available\"},function(){_this.props.callback(updatedQuestions);});};_this.renderQuestions=function(){return _this.state.questions.map(function(question){return/*#__PURE__*/React.createElement(\"div\",{className:\"radioButtonDiv\",key:question.key},/*#__PURE__*/React.createElement(\"h3\",null,question.text),/*#__PURE__*/React.createElement(\"form\",{className:\"usa-form FormElement\"},/*#__PURE__*/React.createElement(\"div\",{className:\"usa-radio margin-x-1\"},/*#__PURE__*/React.createElement(\"input\",{className:\"usa-radio__input \".concat(question.text),onChange:function onChange(e){return _this.handleOnChange(e,question.key);},id:\"\".concat(question.key,\"_Yes\"),type:\"radio\",checked:question.answer===\"Yes\",value:\"Yes\",name:question.key}),/*#__PURE__*/React.createElement(\"label\",{className:\"usa-radio__label\",htmlFor:\"\".concat(question.key,\"_Yes\")},\"Yes\")),/*#__PURE__*/React.createElement(\"div\",{className:\"usa-radio margin-x-1\"},/*#__PURE__*/React.createElement(\"input\",{className:\"usa-radio__input \".concat(question.text),onChange:function onChange(e){return _this.handleOnChange(e,question.key);},id:\"\".concat(question.key,\"_No\"),type:\"radio\",checked:question.answer===\"No\",value:\"No\",name:question.key}),/*#__PURE__*/React.createElement(\"label\",{className:\"usa-radio__label\",htmlFor:\"\".concat(question.key,\"_No\")},\"No\")),/*#__PURE__*/React.createElement(\"div\",{className:\"usa-radio margin-x-1\"},/*#__PURE__*/React.createElement(\"input\",{className:\"usa-radio__input \".concat(question.text),onChange:function onChange(e){return _this.handleOnChange(e,question.key);},id:\"\".concat(question.key,\"_DontKnow\"),type:\"radio\",checked:question.answer===\"Patient doesn't know\",value:\"Patient doesn't know\",name:question.key}),/*#__PURE__*/React.createElement(\"label\",{className:\"usa-radio__label\",htmlFor:\"\".concat(question.key,\"_DontKnow\")},\"I don't know\"))));});};return _this;}_createClass(Patient2,[{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{id:\"Patient2\",className:\"tablet:grid-col padding-x-2\"},/*#__PURE__*/React.createElement(\"div\",{className:\"width-full flex-column flex-align-center\"},/*#__PURE__*/React.createElement(\"h2\",{style:{marginBottom:\"15px\"}},\"Please check all the statements below that apply to you\"),/*#__PURE__*/React.createElement(\"p\",null,\"Select one answer in each row\")),this.renderQuestions());}}]);return Patient2;}(Component);export default Patient2;","map":{"version":3,"sources":["/Users/saraalhasan/Desktop/thesis/symptom checker versions/1 perception_experiment_ver_medical-symptom-checker-master/src/components/Patient/Patient2.jsx"],"names":["React","Component","Patient2","state","questions","text","answer","key","next_button_available","handleOnChange","e","questionKey","updatedQuestions","map","question","target","value","allAnswered","every","setState","props","callback","renderQuestions","marginBottom"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Patient.css\";\n\nclass Patient2 extends Component {\n  state = {\n    questions: [\n      {\n        text: \"Patient is overweight or obese\",\n        answer: \"Patient doesn't know\",\n        key: \"question_1\",\n      },\n      {\n        text: \"Patient smokes cigarettes\",\n        answer: \"Patient doesn't know\",\n        key: \"question_2\",\n      },\n      {\n        text: \"Patient has been recently injured\",\n        answer: \"Patient doesn't know\",\n        key: \"question_3\",\n      },\n      {\n        text: \"Patient has high cholesterol\",\n        answer: \"Patient doesn't know\",\n        key: \"question_4\",\n      },\n      {\n        text: \"Patient has hypertension\",\n        answer: \"Patient doesn't know\",\n        key: \"question_5\",\n      },\n      {\n        text: \"Patient has diabetes\",\n        answer: \"Patient doesn't know\",\n        key: \"question_6\",\n      },\n    ],\n    next_button_available: \"Not available\",\n  };\n\n  handleOnChange = (e, questionKey) => {\n    const updatedQuestions = this.state.questions.map((question) => {\n      if (question.key === questionKey) {\n        return { ...question, answer: e.target.value };\n      }\n      return question;\n    });\n\n    const allAnswered = updatedQuestions.every(\n      (question) => question.answer !== \"\"\n    );\n\n    this.setState(\n      {\n        questions: updatedQuestions,\n        next_button_available: allAnswered ? \"Available\" : \"Not available\",\n      },\n      () => {\n        this.props.callback(updatedQuestions);\n      }\n    );\n  };\n\n  renderQuestions = () => {\n    return this.state.questions.map((question) => (\n      <div className=\"radioButtonDiv\" key={question.key}>\n        <h3>{question.text}</h3>\n        <form className=\"usa-form FormElement\">\n          <div className=\"usa-radio margin-x-1\">\n            <input\n              className={`usa-radio__input ${question.text}`}\n              onChange={(e) => this.handleOnChange(e, question.key)}\n              id={`${question.key}_Yes`}\n              type=\"radio\"\n              checked={question.answer === \"Yes\"}\n              value=\"Yes\"\n              name={question.key}\n            />\n            <label className=\"usa-radio__label\" htmlFor={`${question.key}_Yes`}>\n              Yes\n            </label>\n          </div>\n          <div className=\"usa-radio margin-x-1\">\n            <input\n              className={`usa-radio__input ${question.text}`}\n              onChange={(e) => this.handleOnChange(e, question.key)}\n              id={`${question.key}_No`}\n              type=\"radio\"\n              checked={question.answer === \"No\"}\n              value=\"No\"\n              name={question.key}\n            />\n            <label className=\"usa-radio__label\" htmlFor={`${question.key}_No`}>\n              No\n            </label>\n          </div>\n          <div className=\"usa-radio margin-x-1\">\n            <input\n              className={`usa-radio__input ${question.text}`}\n              onChange={(e) => this.handleOnChange(e, question.key)}\n              id={`${question.key}_DontKnow`}\n              type=\"radio\"\n              checked={question.answer === \"Patient doesn't know\"}\n              value=\"Patient doesn't know\"\n              name={question.key}\n            />\n            <label className=\"usa-radio__label\" htmlFor={`${question.key}_DontKnow`}>\n              I don't know\n            </label>\n          </div>\n        </form>\n      </div>\n    ));\n  };\n\n  render() {\n    return (\n      <div id=\"Patient2\" className=\"tablet:grid-col padding-x-2\">\n        <div className=\"width-full flex-column flex-align-center\">\n          <h2 style={{ marginBottom: \"15px\" }}>\n            Please check all the statements below that apply to you\n          </h2>\n          <p>Select one answer in each row</p>\n        </div>\n        {this.renderQuestions()}\n      </div>\n    );\n  }\n}\n\nexport default Patient2;\n"]},"metadata":{},"sourceType":"module"}