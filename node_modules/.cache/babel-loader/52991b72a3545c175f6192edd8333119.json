{"ast":null,"code":"import React,{Component}from\"react\";import\"./Patient.css\";class Patient2 extends Component{constructor(){super(...arguments);this.state={questions:[{text:\"Patient is overweight or obese | هل تعاني من السمنه\",answer:\"Patient doesn't know\",key:\"question_1\"},{text:\"Patient smokes cigarettes | هل تدخن\",answer:\"Patient doesn't know\",key:\"question_2\"},{text:\"Patient has been recently injured | هل أصبت بإصابة مؤخراً\",answer:\"Patient doesn't know\",key:\"question_3\"},{text:\"Patient has high cholesterol | هل تعاني من ارتفاع الكوليسترول\",answer:\"Patient doesn't know\",key:\"question_4\"},{text:\"Patient has hypertension | هل لديك ارتفاع في الضغط\",answer:\"Patient doesn't know\",key:\"question_5\"},{text:\"Patient has diabetes | هل انت مصاب بالسكري\",answer:\"Patient doesn't know\",key:\"question_6\"}],next_button_available:\"Not available\"};this.handleOnChange=(e,questionKey)=>{const updatedQuestions=this.state.questions.map(question=>{if(question.key===questionKey){return{...question,answer:e.target.value};}return question;});const allAnswered=updatedQuestions.every(question=>question.answer!==\"\");this.setState({questions:updatedQuestions,next_button_available:allAnswered?\"Available\":\"Not available\"},()=>{this.props.callback(updatedQuestions);});};//   return this.state.questions.map((question) => (\n//     <div className=\"radioButtonDiv\" key={question.key}>\n//       <h3>{question.text}</h3>\n//       <form className=\"usa-form FormElement\">\n//         <div className=\"usa-radio margin-x-1\">\n//           <input\n//             className={`usa-radio__input ${question.text}`}\n//             onChange={(e) => this.handleOnChange(e, question.key)}\n//             id={`${question.key}_Yes`}\n//             type=\"radio\"\n//             checked={question.answer === \"Yes\"}\n//             value=\"Yes\"\n//             name={question.key}\n//           />\n//           <label className=\"usa-radio__label\" htmlFor={`${question.key}_Yes`}>\n//             Yes\n//           </label>\n//         </div>\n//         <div className=\"usa-radio margin-x-1\">\n//           <input\n//             className={`usa-radio__input ${question.text}`}\n//             onChange={(e) => this.handleOnChange(e, question.key)}\n//             id={`${question.key}_No`}\n//             type=\"radio\"\n//             checked={question.answer === \"No\"}\n//             value=\"No\"\n//             name={question.key}\n//           />\n//           <label className=\"usa-radio__label\" htmlFor={`${question.key}_No`}>\n//             No\n//           </label>\n//         </div>\n//         <div className=\"usa-radio margin-x-1\">\n//           <input\n//             className={`usa-radio__input ${question.text}`}\n//             onChange={(e) => this.handleOnChange(e, question.key)}\n//             id={`${question.key}_DontKnow`}\n//             type=\"radio\"\n//             checked={question.answer === \"Patient doesn't know\"}\n//             value=\"Patient doesn't know\"\n//             name={question.key}\n//           />\n//           <label className=\"usa-radio__label\" htmlFor={`${question.key}_DontKnow`}>\n//             I don't know\n//           </label>\n//         </div>\n//       </form>\n//     </div>\n//   ));\n// };\nthis.renderQuestions=()=>{return this.state.questions.map(question=>/*#__PURE__*/React.createElement(\"div\",{className:\"radioButtonDiv\",key:question.key},/*#__PURE__*/React.createElement(\"h3\",{className:question.text===\"Patient has been recently injured\"?\"custom-font\":\"\"},question.text),/*#__PURE__*/React.createElement(\"form\",{className:\"usa-form FormElement\"},/*#__PURE__*/React.createElement(\"div\",{className:\"usa-radio margin-x-1\"},/*#__PURE__*/React.createElement(\"input\",{className:`usa-radio__input ${question.text}`,onChange:e=>this.handleOnChange(e,question.key),id:`${question.key}_Yes`,type:\"radio\",checked:question.answer===\"Yes\",value:\"Yes\",name:question.key}),/*#__PURE__*/React.createElement(\"label\",{className:\"usa-radio__label\",htmlFor:`${question.key}_Yes`},\"Yes\")),/*#__PURE__*/React.createElement(\"div\",{className:\"usa-radio margin-x-1\"},/*#__PURE__*/React.createElement(\"input\",{className:`usa-radio__input ${question.text}`,onChange:e=>this.handleOnChange(e,question.key),id:`${question.key}_No`,type:\"radio\",checked:question.answer===\"No\",value:\"No\",name:question.key}),/*#__PURE__*/React.createElement(\"label\",{className:\"usa-radio__label\",htmlFor:`${question.key}_No`},\"No\")),/*#__PURE__*/React.createElement(\"div\",{className:\"usa-radio margin-x-1\"},/*#__PURE__*/React.createElement(\"input\",{className:`usa-radio__input ${question.text}`,onChange:e=>this.handleOnChange(e,question.key),id:`${question.key}_DontKnow`,type:\"radio\",checked:question.answer===\"Patient doesn't know\",value:\"Patient doesn't know\",name:question.key}),/*#__PURE__*/React.createElement(\"label\",{className:\"usa-radio__label\",htmlFor:`${question.key}_DontKnow`},\"I don't know\")))));};}render(){return/*#__PURE__*/React.createElement(\"div\",{id:\"Patient2\",className:\"tablet:grid-col padding-x-2\"},/*#__PURE__*/React.createElement(\"div\",{className:\"width-full flex-column flex-align-center\"},/*#__PURE__*/React.createElement(\"h2\",{style:{marginBottom:\"15px\"}},\"Please check all the statements below that apply to you | \\u0645\\u0646 \\u0641\\u0636\\u0644\\u0643 \\u0627\\u062E\\u062A\\u0631 \\u0627\\u0644\\u0627\\u062C\\u0627\\u0628\\u0627\\u062A \\u0627\\u0644\\u062A\\u064A \\u062A\\u0646\\u0637\\u0628\\u0642 \\u0639\\u0644\\u064A\\u0643\"),/*#__PURE__*/React.createElement(\"p\",null,\"Select one answer in each row | \\u0627\\u062E\\u062A\\u0631 \\u0627\\u062C\\u0627\\u0628\\u0647 \\u0648\\u0627\\u062D\\u062F\\u0629 \\u0644\\u0643\\u0644 \\u0633\\u0637\\u0631\")),this.renderQuestions());}}export default Patient2;","map":{"version":3,"names":["React","Component","Patient2","constructor","arguments","state","questions","text","answer","key","next_button_available","handleOnChange","e","questionKey","updatedQuestions","map","question","target","value","allAnswered","every","setState","props","callback","renderQuestions","createElement","className","onChange","id","type","checked","name","htmlFor","render","style","marginBottom"],"sources":["/Users/saraalhasan/Desktop/thesis/expermint version/symptomchecker/src/components/Patient/Patient2.jsx"],"sourcesContent":["import React, { Component } from \"react\";\nimport \"./Patient.css\";\n\nclass Patient2 extends Component {\n  state = {\n    questions: [\n      {\n        text: \"Patient is overweight or obese | هل تعاني من السمنه\",\n        answer: \"Patient doesn't know\",\n        key: \"question_1\",\n      },\n      {\n        text: \"Patient smokes cigarettes | هل تدخن\",\n        answer: \"Patient doesn't know\",\n        key: \"question_2\",\n      },\n      {\n        text: \"Patient has been recently injured | هل أصبت بإصابة مؤخراً\",\n        answer: \"Patient doesn't know\",\n        key: \"question_3\",\n      },\n      {\n        text: \"Patient has high cholesterol | هل تعاني من ارتفاع الكوليسترول\",\n        answer: \"Patient doesn't know\",\n        key: \"question_4\",\n      },\n      {\n        text: \"Patient has hypertension | هل لديك ارتفاع في الضغط\",\n        answer: \"Patient doesn't know\",\n        key: \"question_5\",\n      },\n      {\n        text: \"Patient has diabetes | هل انت مصاب بالسكري\",\n        answer: \"Patient doesn't know\",\n        key: \"question_6\",\n      },\n    ],\n    next_button_available: \"Not available\",\n  };\n\n  handleOnChange = (e, questionKey) => {\n    const updatedQuestions = this.state.questions.map((question) => {\n      if (question.key === questionKey) {\n        return { ...question, answer: e.target.value };\n      }\n      return question;\n    });\n\n    const allAnswered = updatedQuestions.every(\n      (question) => question.answer !== \"\"\n    );\n\n    this.setState(\n      {\n        questions: updatedQuestions,\n        next_button_available: allAnswered ? \"Available\" : \"Not available\",\n      },\n      () => {\n        this.props.callback(updatedQuestions);\n      }\n    );\n  };\n\n  //   return this.state.questions.map((question) => (\n  //     <div className=\"radioButtonDiv\" key={question.key}>\n  //       <h3>{question.text}</h3>\n  //       <form className=\"usa-form FormElement\">\n  //         <div className=\"usa-radio margin-x-1\">\n  //           <input\n  //             className={`usa-radio__input ${question.text}`}\n  //             onChange={(e) => this.handleOnChange(e, question.key)}\n  //             id={`${question.key}_Yes`}\n  //             type=\"radio\"\n  //             checked={question.answer === \"Yes\"}\n  //             value=\"Yes\"\n  //             name={question.key}\n  //           />\n  //           <label className=\"usa-radio__label\" htmlFor={`${question.key}_Yes`}>\n  //             Yes\n  //           </label>\n  //         </div>\n  //         <div className=\"usa-radio margin-x-1\">\n  //           <input\n  //             className={`usa-radio__input ${question.text}`}\n  //             onChange={(e) => this.handleOnChange(e, question.key)}\n  //             id={`${question.key}_No`}\n  //             type=\"radio\"\n  //             checked={question.answer === \"No\"}\n  //             value=\"No\"\n  //             name={question.key}\n  //           />\n  //           <label className=\"usa-radio__label\" htmlFor={`${question.key}_No`}>\n  //             No\n  //           </label>\n  //         </div>\n  //         <div className=\"usa-radio margin-x-1\">\n  //           <input\n  //             className={`usa-radio__input ${question.text}`}\n  //             onChange={(e) => this.handleOnChange(e, question.key)}\n  //             id={`${question.key}_DontKnow`}\n  //             type=\"radio\"\n  //             checked={question.answer === \"Patient doesn't know\"}\n  //             value=\"Patient doesn't know\"\n  //             name={question.key}\n  //           />\n  //           <label className=\"usa-radio__label\" htmlFor={`${question.key}_DontKnow`}>\n  //             I don't know\n  //           </label>\n  //         </div>\n  //       </form>\n  //     </div>\n  //   ));\n  // };\n  renderQuestions = () => {\n    return this.state.questions.map((question) => (\n      <div className=\"radioButtonDiv\" key={question.key}>\n        <h3 className={question.text === \"Patient has been recently injured\" ? \"custom-font\" : \"\"}>\n          {question.text}\n        </h3>\n        <form className=\"usa-form FormElement\">\n          <div className=\"usa-radio margin-x-1\">\n            <input\n              className={`usa-radio__input ${question.text}`}\n              onChange={(e) => this.handleOnChange(e, question.key)}\n              id={`${question.key}_Yes`}\n              type=\"radio\"\n              checked={question.answer === \"Yes\"}\n              value=\"Yes\"\n              name={question.key}\n            />\n            <label className=\"usa-radio__label\" htmlFor={`${question.key}_Yes`}>\n              Yes\n            </label>\n          </div>\n          <div className=\"usa-radio margin-x-1\">\n            <input\n              className={`usa-radio__input ${question.text}`}\n              onChange={(e) => this.handleOnChange(e, question.key)}\n              id={`${question.key}_No`}\n              type=\"radio\"\n              checked={question.answer === \"No\"}\n              value=\"No\"\n              name={question.key}\n            />\n            <label className=\"usa-radio__label\" htmlFor={`${question.key}_No`}>\n              No\n            </label>\n          </div>\n          <div className=\"usa-radio margin-x-1\">\n            <input\n              className={`usa-radio__input ${question.text}`}\n              onChange={(e) => this.handleOnChange(e, question.key)}\n              id={`${question.key}_DontKnow`}\n              type=\"radio\"\n              checked={question.answer === \"Patient doesn't know\"}\n              value=\"Patient doesn't know\"\n              name={question.key}\n            />\n            <label className=\"usa-radio__label\" htmlFor={`${question.key}_DontKnow`}>\n              I don't know\n            </label>\n          </div>\n        </form>\n      </div>\n    ));\n  };\n  \n  render() {\n    return (\n      <div id=\"Patient2\" className=\"tablet:grid-col padding-x-2\">\n        <div className=\"width-full flex-column flex-align-center\">\n          <h2 style={{ marginBottom: \"15px\" }}>\n            Please check all the statements below that apply to you | من فضلك اختر الاجابات التي تنطبق عليك\n          </h2>\n          <p>Select one answer in each row | اختر اجابه واحدة لكل سطر</p>\n        </div>\n        {this.renderQuestions()}\n      </div>\n    );\n  }\n}\n\nexport default Patient2;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}