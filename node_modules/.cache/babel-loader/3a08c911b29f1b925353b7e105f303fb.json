{"ast":null,"code":"var _jsxFileName = \"/Users/saraalhasan/Downloads/perception_experiment_ver_medical-symptom-checker-master/src/components/Patient/Patient2.jsx\";\nimport React, { Component } from \"react\";\nimport \"./Patient.css\";\n\nclass Patient2 extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      question_1: \"\",\n      question_2: \"\",\n      question_3: \"\",\n      question_4: \"\",\n      question_5: \"\",\n      question_6: \"\",\n      next_button_available: \"\",\n      all_answer: []\n    };\n\n    this.handleOnChange = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      this.setState({\n        [name]: value\n      }, () => {\n        this.props.callback(this.setObject(), this.nextButton());\n      });\n      this.setState({\n        all_answer: this.setObject()\n      });\n    };\n\n    this.nextButton = () => {\n      const {\n        question_1,\n        question_2,\n        question_3,\n        question_4,\n        question_5,\n        question_6\n      } = this.state;\n      return question_1 && question_2 && question_3 && question_4 && question_5 && question_6 ? \"Available\" : \"Not available\";\n    };\n\n    this.setObject = () => [{\n      question: \"Patient is overweight or obese\",\n      answer: this.state.question_1\n    }, {\n      question: \"Patient smokes cigarettes\",\n      answer: this.state.question_2\n    }, {\n      question: \"Patient has been recently injured\",\n      answer: this.state.question_3\n    }, {\n      question: \"Patient has high cholesterol\",\n      answer: this.state.question_4\n    }, {\n      question: \"Patient has hypertension\",\n      answer: this.state.question_5\n    }, {\n      question: \"Patient has diabetes\",\n      answer: this.state.question_6\n    }];\n\n    this.renderRadioButtonGroup = (labelText, name, selectedValue, className) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"radioButtonDiv\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }\n      }, labelText), /*#__PURE__*/React.createElement(\"form\", {\n        className: \"usa-form FormElement\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"usa-radio margin-x-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        className: `usa-radio__input ${className}`,\n        onChange: this.handleOnChange,\n        id: `${name}_Yes`,\n        type: \"radio\",\n        checked: selectedValue === \"Yes\",\n        value: \"Yes\",\n        name: name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        className: \"usa-radio__label\",\n        htmlFor: `${name}_Yes`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }\n      }, \"Yes\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"usa-radio margin-x-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        className: `usa-radio__input ${className}`,\n        onChange: this.handleOnChange,\n        id: `${name}_No`,\n        type: \"radio\",\n        checked: selectedValue === \"No\",\n        value: \"No\",\n        name: name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        className: \"usa-radio__label\",\n        htmlFor: `${name}_No`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }\n      }, \"No\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"usa-radio margin-x-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        className: `usa-radio__input ${className}`,\n        onChange: this.handleOnChange,\n        id: `${name}_DoesNo`,\n        type: \"radio\",\n        checked: selectedValue === \"Patient doesn't know\",\n        value: \"Patient doesn't know\",\n        name: name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        className: \"usa-radio__label\",\n        htmlFor: `${name}_DoesNo`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }\n      }, \"I don't know\"))));\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"Patient2\",\n      className: \"tablet:grid-col padding-x-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"width-full flex-column flex-align-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      style: {\n        marginBottom: \"15px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, \"Please check all the statements below that apply to you\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, \"Select one answer in each row\")), this.renderRadioButtonGroup(\"I am overweight\", \"overweight\", this.state.question_1, \"I_am_overweight_or_obese\"), this.renderRadioButtonGroup(\"I smoke cigarettes\", \"cigarettes\", this.state.question_2, \"I_smoke_cigarettes\"), this.renderRadioButtonGroup(\"I have been recently injured\", \"injured\", this.state.question_3, \"I_have_been_recently_injured\"), this.renderRadioButtonGroup(\"I have high cholesterol\", \"cholesterol\", this.state.question_4, \"I_have_high_cholesterol\"), this.renderRadioButtonGroup(\"I have hypertension\", \"hypertension\", this.state.question_5, \"I_have_hypertension\"), this.renderRadioButtonGroup(\"I have diabetes\", \"diabetes\", this.state.question_6, \"I_have_diabetes\"));\n  }\n\n}\n\nexport default Patient2;","map":{"version":3,"sources":["/Users/saraalhasan/Downloads/perception_experiment_ver_medical-symptom-checker-master/src/components/Patient/Patient2.jsx"],"names":["React","Component","Patient2","state","question_1","question_2","question_3","question_4","question_5","question_6","next_button_available","all_answer","handleOnChange","e","name","value","target","setState","props","callback","setObject","nextButton","question","answer","renderRadioButtonGroup","labelText","selectedValue","className","render","marginBottom"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Patient.css\";\n\nclass Patient2 extends Component {\n  state = {\n    question_1: \"\",\n    question_2: \"\",\n    question_3: \"\",\n    question_4: \"\",\n    question_5: \"\",\n    question_6: \"\",\n    next_button_available: \"\",\n    all_answer: [],\n  };\n\n  handleOnChange = (e) => {\n    const { name, value } = e.target;\n\n    this.setState(\n      {\n        [name]: value,\n      },\n      () => {\n        this.props.callback(this.setObject(), this.nextButton());\n      }\n    );\n\n    this.setState({\n      all_answer: this.setObject(),\n    });\n  };\n\n  nextButton = () => {\n    const { question_1, question_2, question_3, question_4, question_5, question_6 } = this.state;\n    return question_1 && question_2 && question_3 && question_4 && question_5 && question_6 ? \"Available\" : \"Not available\";\n  };\n\n  setObject = () => [\n    {\n      question: \"Patient is overweight or obese\",\n      answer: this.state.question_1,\n    },\n    {\n      question: \"Patient smokes cigarettes\",\n      answer: this.state.question_2,\n    },\n    {\n      question: \"Patient has been recently injured\",\n      answer: this.state.question_3,\n    },\n    {\n      question: \"Patient has high cholesterol\",\n      answer: this.state.question_4,\n    },\n    {\n      question: \"Patient has hypertension\",\n      answer: this.state.question_5,\n    },\n    {\n      question: \"Patient has diabetes\",\n      answer: this.state.question_6,\n    },\n  ];\n\n  render() {\n    return (\n      <div id=\"Patient2\" className=\"tablet:grid-col padding-x-2\">\n        <div className=\"width-full flex-column flex-align-center\">\n          <h2 style={{ marginBottom: \"15px\" }}>\n            Please check all the statements below that apply to you\n          </h2>\n          <p>Select one answer in each row</p>\n        </div>\n\n        {this.renderRadioButtonGroup(\"I am overweight\", \"overweight\", this.state.question_1, \"I_am_overweight_or_obese\")}\n        {this.renderRadioButtonGroup(\"I smoke cigarettes\", \"cigarettes\", this.state.question_2, \"I_smoke_cigarettes\")}\n        {this.renderRadioButtonGroup(\"I have been recently injured\", \"injured\", this.state.question_3, \"I_have_been_recently_injured\")}\n        {this.renderRadioButtonGroup(\"I have high cholesterol\", \"cholesterol\", this.state.question_4, \"I_have_high_cholesterol\")}\n        {this.renderRadioButtonGroup(\"I have hypertension\", \"hypertension\", this.state.question_5, \"I_have_hypertension\")}\n        {this.renderRadioButtonGroup(\"I have diabetes\", \"diabetes\", this.state.question_6, \"I_have_diabetes\")}\n      </div>\n    );\n  }\n\n  renderRadioButtonGroup = (labelText, name, selectedValue, className) => {\n    return (\n      <div className=\"radioButtonDiv\">\n        <h3>{labelText}</h3>\n        <form className=\"usa-form FormElement\">\n          <div className=\"usa-radio margin-x-1\">\n            <input\n              className={`usa-radio__input ${className}`}\n              onChange={this.handleOnChange}\n              id={`${name}_Yes`}\n              type=\"radio\"\n              checked={selectedValue === \"Yes\"}\n              value=\"Yes\"\n              name={name}\n            />\n            <label className=\"usa-radio__label\" htmlFor={`${name}_Yes`}>\n              Yes\n            </label>\n          </div>\n          <div className=\"usa-radio margin-x-1\">\n            <input\n              className={`usa-radio__input ${className}`}\n              onChange={this.handleOnChange}\n              id={`${name}_No`}\n              type=\"radio\"\n              checked={selectedValue === \"No\"}\n              value=\"No\"\n              name={name}\n            />\n            <label className=\"usa-radio__label\" htmlFor={`${name}_No`}>\n              No\n            </label>\n          </div>\n          <div className=\"usa-radio margin-x-1\">\n            <input\n              className={`usa-radio__input ${className}`}\n              onChange={this.handleOnChange}\n              id={`${name}_DoesNo`}\n              type=\"radio\"\n              checked={selectedValue === \"Patient doesn't know\"}\n              value=\"Patient doesn't know\"\n              name={name}\n            />\n            <label className=\"usa-radio__label\" htmlFor={`${name}_DoesNo`}>\n              I don't know\n            </label>\n          </div>\n        </form>\n      </div>\n    );\n  };\n}\n\nexport default Patient2;\n"]},"metadata":{},"sourceType":"module"}